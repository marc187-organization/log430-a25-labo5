name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: labo04_db
          MYSQL_USER: labo04
          MYSQL_PASSWORD: labo04
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot --silent"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system tools
        run: |
          sudo apt-get update
          sudo apt-get install -y default-mysql-client

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install pytest

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..60}; do
            if mysql -h 127.0.0.1 -uroot -proot -e "SELECT 1" >/dev/null 2>&1; then
              echo "MySQL is up!"
              exit 0
            fi
            echo "Waiting for MySQL... ($i/60)"
            sleep 2
          done
          echo "MySQL did not become ready in time"; exit 1

      - name: Initialize schema (from db-init/)
        if: hashFiles('db-init/*.sql') != ''
        run: |
          cat db-init/*.sql | mysql -h 127.0.0.1 -uroot -proot labo04_db

      - name: Create .env for tests
        run: |
          {
            echo "DB_HOST=127.0.0.1"
            echo "DB_PORT=3306"
            echo "DB_NAME=labo04_db"
            echo "DB_USER=labo04"
            echo "DB_PASS=labo04"
            echo "REDIS_HOST=127.0.0.1"
            echo "REDIS_PORT=6379"
            echo "REDIS_DB=0"
            echo "PYTHONUNBUFFERED=1"
          } > .env

      # Optional: only if your code is under src/
      - name: Add src to PYTHONPATH
        if: hashFiles('src/**') != ''
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: labo04_db
          DB_USER: labo04
          DB_PASS: labo04
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          REDIS_DB: 0
          PYTHONUNBUFFERED: 1
          PYTHONPATH: ${{ env.PYTHONPATH }}
        run: pytest -q --maxfail=1 --disable-warnings
