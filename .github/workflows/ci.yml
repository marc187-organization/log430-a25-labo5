name: CI - pytest

on:
    push:
    pull_request:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Create .env for CI
              run: |
                  cat > .env <<'EOF'
                  DB_HOST=mysql
                  DB_PORT=3306
                  DB_NAME=labo04_db
                  DB_USER=labo04
                  DB_PASS=labo04
                  REDIS_HOST=redis
                  REDIS_PORT=6379
                  REDIS_DB=0
                  PYTHONUNBUFFERED=1
                  EOF

            - name: Create external network
              run: docker network create labo05-network || true

            - name: Start services
              run: docker compose up -d --build mysql redis

            - name: Wait for MySQL to be ready
              run: |
                  for i in {1..40}; do
                    if docker compose exec -T mysql mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
                      exit 0
                    fi
                    sleep 2
                  done
                  exit 1

            - name: Start Krakend + app
              run: docker compose up -d --build krakend store_manager

            - name: Install all Python dependencies
              run: docker compose exec -T store_manager pip install -r requirements.txt

            - name: Run pytest inside app container
              run: docker compose exec -T store_manager pytest

            - name: Teardown
              if: always()
              run: docker compose down -v
